@misc{github,
author = {Bradt, Joshua},
mendeley-groups = {Comp Phys},
publisher = {Github},
title = {{Comp-phys repository}},
howpublished = {\url{https://github.com/jbradt/comp-phys}},
year = {2016}
}
@techreport{Sanderson2010,
abstract = {In this report we provide an overview of the open source Armadillo C++ linear algebra library (matrix maths). The library aims to have a good balance between speed and ease of use, and is useful if C++ is the language of choice (due to speed and/or integration capabilities), rather than another language like Matlab or Octave. In particular, Armadillo can be used for fast prototyping and computationally intensive experiments, while at the same time allowing for relatively painless transition of research code into production environments. It is distributed under a license that is applicable in both open source and proprietary software development contexts. The library supports integer, floating point and complex numbers, as well as a subset of trigonometric and statistics functions. Various matrix decompositions are provided through optional integration with LAPACK, or one its high-performance drop-in replacements, such as MKL from Intel or ACML from AMD. A delayed evaluation approach is employed (during compile time) to combine several operations into one and reduce (or eliminate) the need for temporaries. This is accomplished through C++ template meta-programming. Performance comparisons suggest that the library is considerably faster than Matlab and Octave, as well as previous C++ libraries such as IT++ and Newmat.},
author = {Sanderson, Conrad},
booktitle = {NICTA},
issn = {1833-9646-4314},
mendeley-groups = {Comp Phys},
title = {{Armadillo: An open source C++ linear algebra library for fast prototyping and computationally intensive experiments}},
url = {http://arma.sourceforge.net},
year = {2010}
}
